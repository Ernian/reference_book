const js = [
    {
        sectionName: 'Методы массивов',
        articles: [
            {
                articleName: 'Добавление и удаление элементов',
                shortDescription: '',
                description: [
                    {
                        code: 'array.push(...elements)',
                        description: 'добавляет один или более элементов в конец массива и возвращает новую длину массива.'
                    },
                    {
                        code: 'array.pop()',
                        description: 'удаляет из массива последний элемент и возвращает его'
                    },
                    {
                        code: 'array.shift()',
                        description: 'удаляет из массива первый элемент и возвращает его'
                    },
                    {
                        code: 'array.unshift(...elements)',
                        description: 'добавляет один или несколько элементов в начало массива и возвращает новую длину массива.'
                    },
                    {
                        code: 'array.splice(index[, deleteCount, element1, ..., elementN])',
                        description: 'с позиции index , удаляет deleteCount элементов и вставляет elem1, ..., elemN на их место. Возвращает массив из удалённых элементов.'
                    },
                    {
                        code: 'array.slice([start], [end])',
                        description: 'возвращает новый массив, в который копирует элементы, начиная с индекса start и до end (не включая end ). Оба индекса start и end могут быть отрицательными. В таком случае отсчёт будет осуществляться с конца массива. Можно вызвать slice и вообще без аргументов: arr.slice() создаёт копию массива arr . Это часто используют, чтобы создать копию массива для дальнейших преобразований, которые не должны менять исходный массив.'
                    },
                    {
                        code: 'array.concat(arg1, arg2...)',
                        description: 'принимает любое количество аргументов, которые могут быть как массивами, так и простыми значениями. В результате мы получаем новый массив, включающий в себя элементы из arr , а также arg1 , arg2 и так далее… Если аргумент argN – массив, то все его элементы копируются. Иначе скопируется сам аргумент.'
                    },
                ],
                source: [
                    {
                        name: 'Добавить ссылку',
                        path: ''
                    },
                ],
            },
            {
                articleName: 'Перебор',
                shortDescription: '',
                description: [
                    {
                        code: 'array.forEach(function(item, index, array) {...}',
                        description: 'позволяет запускать функцию для каждого элемента массива. Результат функции (если она вообще что-то возвращает) отбрасывается и игнорируется (не изменяет исходный массив)'
                    },
                    
                ],
                source: [
                    {
                        name: 'Добавить ссылку',
                        path: ''
                    },
                ],
            },
            {
                articleName: 'Поиск в массиве',
                shortDescription: '',
                description: [
                    {
                        code: 'array.indexOf(item, from)',
                        description: 'ищет item , начиная с индекса from , и возвращает индекс, на котором был найден искомый элемент, в противном случае -1'
                    },
                    {
                        code: 'array.lastIndexOf(item, from)',
                        description: 'то же самое, но ищет справа налево'
                    },
                    {
                        code: 'array.includes(item, from)',
                        description: 'ищет item, начиная с индекса from , и возвращает true, если поиск успешен'
                    },
                    'Обратите внимание, что методы используют строгое сравнение === . Таким образом, если мы ищем false, он находит именно false, а не ноль.',
                    'Если мы хотим проверить наличие элемента, и нет необходимости знать его точный индекс, тогда предпочтительным является arr.includes.',
                    'Кроме того, очень незначительным отличием includes является то, что он правильно обрабатывает NaN в отличие от indexOf/lastIndexOf',
                    {
                        code: 'array.find(function(item, index, array) {...}',
                        description: 'функция вызывается по очереди для каждого элемента массива: item – очередной элемент, index – его индекс, array – сам массив. Если функция возвращает true, поиск прерывается и возвращается item . Если ничего не найдено, возвращается undefined'
                    },
                    {
                        code: 'array.filter(function(item, index, array) {...}',
                        description: 'возвращает массив из всех подходящих элементов (для которых функция вернет true)'
                    },
                    
                ],
                source: [
                    {
                        name: 'Добавить ссылку',
                        path: ''
                    },
                ],
            },
            {
                articleName: 'Преобразование массива',
                shortDescription: '',
                description: [
                    {
                        code: 'array.map(item, index, array)',
                        description: 'вызывает функцию для каждого элемента массива и возвращает массив результатов выполнения этой функции'
                    },  
                ],
                source: [
                    {
                        name: 'Добавить ссылку',
                        path: ''
                    },
                ],
            },
        ],
    },
]